name: Release Branch Workflow

on:
  push:
    branches:
      - 'release/**'
  workflow_dispatch:
    inputs:
      release_branch:
        description: 'Release branch name (e.g., release/v1.2.0)'
        required: true

jobs:
  prepare-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
          
      - name: Install dependencies
        run: bun install --frozen-lockfile
        
      - name: Check for changesets
        id: changeset-status
        run: |
          if bun changeset status --since=main; then
            echo "has-changesets=true" >> $GITHUB_OUTPUT
            echo "‚úÖ Found changesets to process"
          else
            echo "has-changesets=false" >> $GITHUB_OUTPUT
            echo "‚ùå No changesets found since main branch"
          fi
        
      - name: Version packages
        if: steps.changeset-status.outputs.has-changesets == 'true'
        run: |
          echo "üîÑ Processing changesets and updating versions..."
          bun changeset version
          
          # Configure git for commits
          git config user.name "release-bot[bot]"
          git config user.email "release-bot[bot]@users.noreply.github.com"
          
          # Commit version changes
          if git diff --staged --quiet && git diff --quiet; then
            echo "No changes to commit after versioning"
          else
            git add .
            git commit -m "chore: version packages for ${{ github.ref_name }} [skip ci]" || echo "No changes to commit"
            git push origin ${{ github.ref_name }}
          fi
          
      - name: Run quality checks
        run: |
          echo "üß™ Running quality checks..."
          bun run build
          bun run typecheck
          bun run lint
          bun run test
        env:
          NODE_ENV: test
          
      - name: Create changelog summary
        if: steps.changeset-status.outputs.has-changesets == 'true'
        run: |
          echo "üìù Generating changelog summary..."
          echo "## üöÄ Release Summary for ${{ github.ref_name }}" > release-notes.md
          echo "" >> release-notes.md
          echo "This release includes the following changes:" >> release-notes.md
          echo "" >> release-notes.md
          
          # Process each package's changelog
          if find packages -name "CHANGELOG.md" -type f | head -1 > /dev/null 2>&1; then
            find packages -name "CHANGELOG.md" -type f | while read changelog; do
              if [ -f "$changelog" ]; then
                package_name=$(echo "$changelog" | sed 's|packages/||' | sed 's|/CHANGELOG.md||')
                echo "### üì¶ @workspace/$package_name" >> release-notes.md
                echo "" >> release-notes.md
                
                # Extract the latest version's changes (between first two ## headers)
                if grep -q "^## " "$changelog"; then
                  awk '/^## / && ++count == 2 {exit} /^## / && count == 1 {next} count == 1 && NF' "$changelog" >> release-notes.md || true
                  echo "" >> release-notes.md
                fi
              fi
            done
          else
            echo "- Package versions updated according to changesets" >> release-notes.md
            echo "- All tests passing ‚úÖ" >> release-notes.md
          fi
          
          echo "" >> release-notes.md
          echo "---" >> release-notes.md
          echo "" >> release-notes.md
          echo "**After merging this PR:**" >> release-notes.md
          echo "- üì¶ Packages will be published to npm" >> release-notes.md
          echo "- üè∑Ô∏è Git tags will be created" >> release-notes.md
          echo "- üìã GitHub release will be generated" >> release-notes.md
          echo "- üîÑ Changes will be merged back to develop" >> release-notes.md
          
      - name: Create Release PR to Main
        if: steps.changeset-status.outputs.has-changesets == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref_name }}
          base: main
          title: "üöÄ Release ${{ github.ref_name }}"
          body-path: release-notes.md
          labels: |
            release
            automated
          reviewers: ${{ github.actor }}
          
      - name: No changesets found
        if: steps.changeset-status.outputs.has-changesets == 'false'
        run: |
          echo "‚ö†Ô∏è No changesets found since main branch."
          echo "This usually means:"
          echo "1. All changesets have already been processed"
          echo "2. No changes require version updates"
          echo "3. This might be a hotfix or manual release branch"
          echo ""
          echo "If this is intentional, you can manually create version updates."