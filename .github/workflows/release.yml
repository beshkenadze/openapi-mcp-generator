name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup Bun
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: 1.2.19
    
    - name: Install dependencies
      run: bun install --frozen-lockfile
    
    - name: Run tests
      run: |
        bun run build
        bun run typecheck
        bun run lint
        bun test packages/cli
        bun test packages/core
    
    - name: Build cross-platform binaries
      run: |
        bun run build:binary:linux
        bun run build:binary:macos
        # Note: Windows binary build requires Windows runner
        # We'll add this in a separate job if needed
      working-directory: packages/cli
    
    - name: Create release archive
      run: |
        mkdir -p release
        cp packages/cli/bin/mcpgen-linux-x64 release/
        cp packages/cli/bin/mcpgen-macos-x64 release/
        cp README.md release/
        cp packages/cli/README.md release/CLI-README.md
        tar -czf mcpgen-${{ github.ref_name }}.tar.gz -C release .
    
    - name: Generate changelog
      id: changelog
      run: |
        if [ -f CHANGELOG.md ]; then
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          sed -n "/^## \[/,/^## \[/p" CHANGELOG.md | head -n -1 >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        else
          echo "changelog=Automated release of ${{ github.ref_name }}" >> $GITHUB_OUTPUT
        fi
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          mcpgen-${{ github.ref_name }}.tar.gz
          packages/cli/bin/mcpgen-linux-x64
          packages/cli/bin/mcpgen-macos-x64
        body: ${{ steps.changelog.outputs.changelog }}
        draft: false
        prerelease: ${{ contains(github.ref_name, '-') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}