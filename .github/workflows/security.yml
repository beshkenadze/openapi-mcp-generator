name: Security & Dependencies

on:
  schedule:
    # Run weekly on Mondays at 9 AM UTC
    - cron: '0 9 * * 1'
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Bun
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: 1.2.19
    
    - name: Install dependencies
      run: bun install --frozen-lockfile
    
    - name: Run Bun audit
      run: bun audit
      continue-on-error: true
    
    - name: Check for known vulnerabilities
      uses: github/super-linter@v5
      env:
        DEFAULT_BRANCH: main
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        VALIDATE_ALL_CODEBASE: false
        VALIDATE_TYPESCRIPT_ES: true
        VALIDATE_JSON: true
        VALIDATE_YAML: true
        VALIDATE_MARKDOWN: true

  dependency-check:
    name: Dependency Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Bun
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: 1.2.19
    
    - name: Check for outdated dependencies
      run: |
        bun install --frozen-lockfile
        bun outdated || true
    
    - name: Generate dependency report
      run: |
        echo "# Dependency Report" > dependency-report.md
        echo "Generated on: $(date)" >> dependency-report.md
        echo "" >> dependency-report.md
        echo "## Package Overview" >> dependency-report.md
        find packages -name "package.json" -exec echo "### {}" \; -exec cat {} \; >> dependency-report.md
    
    - name: Upload dependency report
      uses: actions/upload-artifact@v4
      with:
        name: dependency-report
        path: dependency-report.md
        retention-days: 30

  license-check:
    name: License Compliance
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Bun
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: 1.2.19
    
    - name: Install dependencies
      run: bun install --frozen-lockfile
    
    - name: Check licenses
      run: |
        # Create a simple license checker
        echo "Checking licenses in packages..."
        for pkg in packages/*/package.json; do
          echo "=== $pkg ==="
          grep -E '"license":|"author":|"homepage":' "$pkg" || true
        done
    
    - name: Verify license files
      run: |
        echo "Checking for license files..."
        find . -name "LICENSE*" -o -name "COPYING*" -type f
        if [ ! -f LICENSE ]; then
          echo "Warning: No LICENSE file found in root directory"
        fi